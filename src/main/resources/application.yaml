server:
  port: 9999
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: temporal-replay-2023-demo
  temporal:
    namespace: default
    connection:
      #change this before moving to docker deployment
      target: host.docker.internal:7233
    workers:
      - task-queue: TradeQueue
          # name: your-worker-name # unique name of the Worker. If not specified, Task Queue is used as the Worker name.
        workflow-classes:
          - io.temporal.replaydemo.business.workflows.TradeProcessingImpl
        activity-beans:
          - ProcessingActivities
        capacity:
          max-concurrent-workflow-task-executors: 2
          max-concurrent-activity-executors: 2
          max-concurrent-local-activity-executors: 0
          max-concurrent-workflow-task-pollers: 2
          max-concurrent-activity-task-pollers: 2
        rate-limits:
          max-worker-activities-per-second: 5.0
          max-task-queue-activities-per-second: 5.0
    workflow-cache:
#      max-instances: 10
      max-threads: 20
#    workersAutoDiscovery:
#      packages: io.temporal.replaydemo.workers
  datasource:
    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;
    username: sa
    password: pass
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    defer-datasource-initialization: true
  h2:
    console:
      enabled: true
# actuator (sdk metrics)
management:
  endpoints:
    web:
      exposure:
        include: prometheus